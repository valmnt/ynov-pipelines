name: python-workflow

on: [workflow_dispatch, push]

permissions: write-all

jobs:
  lint_flake8:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
    - name: Lint with flake8
      run: |
        python3 -m flake8 main.py
        python3 -m flake8 sum.py

  lint_black:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black
    - name: Lint with Black
      uses: rickstaa/action-black@v1.3.0
      with:
        black_args: ". --check --verbose"

  test:
    runs-on: ubuntu-latest
    needs: [lint_flake8, lint_black]
    strategy:
      matrix:
        version: ["3.9", "3.10", "3.11"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
    - name: Test with Pytest
      run: python3 -m pytest sum.py --doctest-modules

  coverage:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install coverage-badge pytest-cov 
    - name: Test coverage
      run: |
        python3 -m pytest --cov=. . --doctest-modules --ignore=main.py
        coverage-badge -o coverage.svg -f
        coverage html
    - name: Commit files
      run: |
        git config --global user.email "valentin.mont@ynov.com"
        git config --global user.name "valmnt"
        git add coverage.svg
        git add htmlcov -f
        git commit -m "Update coverage.svg" || echo "No changes to commit"
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        branch: "main"

  deploy:
    runs-on: ubuntu-latest
    needs: coverage
    steps:
    - name: curl google.com
      run: curl https://www.google.com/
  
  deploy-cov:
    needs: coverage
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Update files
        run: git pull
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: 'htmlcov'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

  message:
    runs-on: ubuntu-latest
    needs: deploy
    if: always()
    steps:
    - name: Message
      run: echo Pipeline executed